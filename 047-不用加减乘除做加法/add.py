# -*- coding:utf-8 -*-
class Solution:
    def Add(self, num1, num2):
        """
        求两个整数之和，要求在函数体内不得使用+、-、*、/四则运算符号。

        使用位运算模拟加法。
        将加法分成三步：
        1. 各位相加，不考虑进位。比如 5 + 17 就是 12
        2. 只计算进位。5 + 7 进了一位，是 10
        3. 将 1、2 的结果相加得到 22

        二进制同样也可以使用上述方法。

        1. 各位相加。有 3 种不同的情况，(1, 1, 0)、(1, 0, 1)、(0, 0, 0)，可以发现与异或的效果是一样的，
        所以这里使用异或进行运算
        2. 只计算进位。发现只有 (1, 1) 会产生进位，进位在左边，所以与位与加左移一位的效果相同，所以这里使用位与和左移一位进行计算
        3. 重复前两步，直到没有进位为止。没有进位表现为数字为 0

        Python 的二进制处理和其他语言不同，所以下面的代码不能 AC。
        """
        sum1 = num1 ^ num2
        sum2 = (num1 & num2) << 1
        while sum2:
            sum1 = sum1 ^ sum2
            sum2 = (sum1 & sum2) << 1
        return sum1
